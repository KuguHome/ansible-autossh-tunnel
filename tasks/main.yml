- name: create autossh user
  when:
  - autossh_onlineconf
  - autossh_createuser
  become: true
  user:
    name: "{{ autossh_user }}"
    system: true
    append: true
    shell: /bin/false
- name: generate autossh key
  become: "{{ autossh_inthenameof }}"
  user:
    name: "{{ autossh_onlineconf | ternary(autossh_user,ansible_user_id) }}"
    generate_ssh_key: true
    ssh_key_type: ED25519
    ssh_key_file: "{{ autossh_path }}/id_{{ autossh_keyname }}"
    ssh_key_comment: "{{ autossh_user }}@{{ inventory_hostname }}"
- name: fetch public key
  become: "{{ autossh_inthenameof }}"
  fetch:
    src: "{{ autossh_path }}/id_{{ autossh_keyname }}.pub"
    dest: "{{ autossh_keyfetch_destination }}"
    flat: true

- name: set .ssh/ directory recursively
  become: "{{ autossh_inthenameof }}"
  file:
    path: "{{ autossh_path }}"
    owner: "{{ autossh_owner }}"
    group: "{{ autossh_owner }}"
    mode: "u+rw,g=,o="
    state: directory
    recurse: true

- name: install autossh
  when: autossh_onlineconf
  become: true
  package:
    name: autossh
- name: deploy systemd unit for autossh tunnels
  tags: systemd
  become: true
  template:
    src: "{{ autossh_unit_template }}"
    dest: "{{ autossh_path_prefix }}/etc/systemd/system/{{ autossh_unit_name }}.service"
  notify: restart autossh
- name: deploy ssh config to autossh user
  tags: portforward
  when:
  - autossh_sshconfig_template_deploy
  become: "{{ autossh_inthenameof }}"
  template:
    src:  "{{ autossh_sshconfig_template }}"
    dest: "{{ autossh_path }}/config"
    owner: "{{ autossh_user }}"

- name: add known host
  become: "{{ autossh_inthenameof }}"
  known_hosts:
    name: "{{ autossh_login_host }}"
    hash_host: true
    key: "{{ autossh_login_hostkey }}"
    path: "{{ autossh_path }}/known_hosts"
  notify: restart autossh

- name: Enable and start autossh tunnels
  when: autossh_onlineconf
  become: true
  systemd:
    name: "{{ autossh_unit_name }}.service"
    enabled: true
    state: started
